@model Taalcafe.Models.ViewModels.SessionEvaluationViewModel
@{
    ViewData["Title"] = "Sessie evaluatie";
}

@section scripts {
    <script>
        "use strict";

        const cijferSelect = document.getElementById("cijferSelect")
        const cijfer = document.getElementById("Cijfer");
        const feedbackBox = document.getElementById("feedbackBox");
        const submitbtn = document.getElementById("submitbtn");

        function saveRating(rating) 
        {
            cijfer.value = rating;

            cijferSelect.hidden = true;
            feedbackBox.hidden = false;
            submitbtn.hidden = false;
        }
    </script>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.SessieId)
    @Html.HiddenFor(model => model.GebruikersId)

    <div class="form-group" id="cijferSelect">
        @Html.LabelFor(model => model.Cijfer, "Wat vond u van het gesprek?", htmlAttributes: new { @class = "control-label" })
        @Html.HiddenFor(model => model.Cijfer)
        <div>
            <img src="~/pics/unhappy_smiley.JPG" onclick="saveRating(1)" />
            <img src="~/pics/neutral_smiley.JPG" onclick="saveRating(2)" />
            <img src="~/pics/happy_smiley.JPG" onclick="saveRating(3)" />
        </div>
    </div>
    <div class="form-group" id="feedbackBox" hidden>
        <div class="col-3">
                @Html.LabelFor(model => model.Feedback, "Kan u vertellen waarom?", htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-9">
                <textarea asp-for="Feedback" class="form-control"></textarea>
                @Html.ValidationMessageFor(model => model.Feedback, "", new { @class = "text-danger" })
            </div>
    </div>
    <div class="form-group" id="submitbtn" hidden>
        <input type="submit" class="btn btn-success" value="Feedback versturen"></input>
    </div>
}
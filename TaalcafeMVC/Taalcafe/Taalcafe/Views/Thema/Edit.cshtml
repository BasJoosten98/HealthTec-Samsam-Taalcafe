@model Taalcafe.Models.DB.Thema
@{
    ViewData["Title"] = "Thema bewerken";
}

@section scripts{
    <script src="~/js/create_thema.js"> </script>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Thema bewerken</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Naam, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Naam, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Naam, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Beschrijving, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <textarea asp-for="Beschrijving" class="form-control"></textarea>
                @Html.ValidationMessageFor(model => model.Beschrijving, "", new { @class = "text-danger" })
            </div>
        </div>


        @*TODO: Afbeeldingen toevoegen*@
        @Html.HiddenFor(model => model.Afbeeldingen)
        @*
        <div class="form-group">
            
            @Html.LabelFor(model => model.Afbeeldingen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*<input class="form-control" type="text" id="vraagBox">*\@
                @Html.ValidationMessageFor(model => model.Afbeeldingen, "", new { @class = "text-danger" })
                <input class="btn btn-secondary" type="button" onclick="" value="Toevoegen"></input>
                <ul class="list-group" id="AfbeeldingenLijst"> </ul>
            </div>            
        </div>
        *@

        
        <div class="form-group">
            @Html.HiddenFor(model => model.Vragen)
            @Html.LabelFor(model => model.Vragen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control" type="text" id="vraagBox">
                @Html.ValidationMessageFor(model => model.Vragen, "", new { @class = "text-danger" })
                <input class="btn btn-secondary" type="button" onclick="AddVraag()" value="Toevoegen"></input>
                <ul class="list-group" id="vragenLijst">
                    @for(var i = 0;  i < Model.Vragen.Split("~").Count(); i++)
                    {
                        <li class="list-group-item vraag">
                            <div class="row">
                                <div class="col-3">
                                    <input class="btn btn-danger" type="button" onclick="RemoveVraag(@i)" value="Verwijderen"></input>
                                </div>
                                <div class="col">@Model.Vragen.Split("~")[i]</div>
                            </div>
                        </li>
                    }
                </ul>
            </div>            
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Aanpassingen opslaan" class="btn btn-success" />
                @Html.ActionLink("Thema verwijderen", "Delete", new { id=Model.Id })
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Terug naar thema overzicht", "Index")
</div>
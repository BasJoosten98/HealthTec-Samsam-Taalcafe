@model Taalcafe.Models.DB.Gebruiker

@{
    ViewData["Title"] = "Gebruiker Bewerken";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <h1>Gebruiker bewerken</h1>
        </hr>
    </div>
    <div class="row">
        @using(Html.BeginForm()) {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.Account.GebruikerId)
            @Html.HiddenFor(model => model.Account.Gebruikersnaam)
            @Html.HiddenFor(model => model.Account.Wachtwoord)

            @Html.ValidationSummary()

            <div class="col-3">
                picture here
            </div>
            <div class="col-7">
                <div class="form-group">
                    <div class="col-3">
                        @Html.LabelFor(model => model.Naam, "Naam", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-9">
                        @Html.EditorFor(model => model.Naam, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Naam, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-3">
                        @Html.LabelFor(model => model.Email, "E-mail", htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-9">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-3">
                        @Html.LabelFor(model => model.Telefoon, "Telefoonnummer", htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-9">
                        @Html.EditorFor(model => model.Telefoon, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Telefoon, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-3">
                        @Html.LabelFor(model => model.Account.Type, "Categorie", htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-9">
                        @Html.DropDownListFor(model => model.Account.Type, (SelectList) ViewBag.roles, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Account.Type, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-3">
                        @Html.LabelFor(model => model.Niveau, "Niveau", htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-9">
                        @Html.DropDownListFor(model => model.Niveau, (SelectList) ViewBag.niveaus, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Niveau, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-2">
                <div class="form-group">
                    <input type="submit" class="btn btn-success" value="Wijzigingen opslaan"></input>
                    <a href='@Url.Action("Delete", "Gebruikers", new { id=@Model.Id })' class="btn btn-danger">Gebruiker verwijderen</a>
                </div>
            </div>
        }
    </div>
</div>
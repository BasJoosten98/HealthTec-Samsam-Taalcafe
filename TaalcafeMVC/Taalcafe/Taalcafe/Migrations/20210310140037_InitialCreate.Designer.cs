// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Taalcafe.Models.DB;

namespace Taalcafe.Migrations
{
    [DbContext(typeof(dbi380705_taalcafeContext))]
    [Migration("20210310140037_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Taalcafe.Models.DB.Account", b =>
                {
                    b.Property<int>("GebruikerId")
                        .HasColumnType("int")
                        .HasColumnName("Gebruiker_Id");

                    b.Property<string>("Gebruikersnaam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Wachtwoord")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GebruikerId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("Taalcafe.Models.DB.Gebruiker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Niveau")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefoon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Gebruiker");
                });

            modelBuilder.Entity("Taalcafe.Models.DB.Sessie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aanmeldingen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan?>("Duur")
                        .HasColumnType("time");

                    b.Property<int>("ThemaId")
                        .HasColumnType("int")
                        .HasColumnName("Thema_Id");

                    b.HasKey("Id");

                    b.HasIndex("ThemaId");

                    b.ToTable("Sessie");
                });

            modelBuilder.Entity("Taalcafe.Models.DB.SessiePartner", b =>
                {
                    b.Property<int>("TaalcoachId")
                        .HasColumnType("int")
                        .HasColumnName("Taalcoach_Id");

                    b.Property<int>("CursistId")
                        .HasColumnType("int")
                        .HasColumnName("Cursist_Id");

                    b.Property<int>("SessieId")
                        .HasColumnType("int")
                        .HasColumnName("Sessie_Id");

                    b.Property<int?>("CijferCursist")
                        .HasColumnType("int")
                        .HasColumnName("Cijfer_Cursist");

                    b.Property<int?>("CijferTaalcoach")
                        .HasColumnType("int")
                        .HasColumnName("Cijfer_Taalcoach");

                    b.Property<string>("FeedbackCursist")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Feedback_Cursist");

                    b.Property<string>("FeedbackTaalcoach")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Feedback_Taalcoach");

                    b.HasKey("TaalcoachId", "CursistId", "SessieId");

                    b.HasIndex("CursistId");

                    b.HasIndex("SessieId");

                    b.ToTable("SessiePartners");
                });

            modelBuilder.Entity("Taalcafe.Models.DB.Thema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Afbeeldingen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Beschrijving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Vragen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Thema");
                });

            modelBuilder.Entity("Taalcafe.Models.DB.Account", b =>
                {
                    b.HasOne("Taalcafe.Models.DB.Gebruiker", "Gebruiker")
                        .WithOne("Account")
                        .HasForeignKey("Taalcafe.Models.DB.Account", "GebruikerId")
                        .HasConstraintName("FK_Account_Gebruiker")
                        .IsRequired();

                    b.Navigation("Gebruiker");
                });

            modelBuilder.Entity("Taalcafe.Models.DB.Sessie", b =>
                {
                    b.HasOne("Taalcafe.Models.DB.Thema", "Thema")
                        .WithMany("Sessies")
                        .HasForeignKey("ThemaId")
                        .HasConstraintName("FK_Sessie_Thema")
                        .IsRequired();

                    b.Navigation("Thema");
                });

            modelBuilder.Entity("Taalcafe.Models.DB.SessiePartner", b =>
                {
                    b.HasOne("Taalcafe.Models.DB.Gebruiker", "Cursist")
                        .WithMany("SessiePartnerCursists")
                        .HasForeignKey("CursistId")
                        .HasConstraintName("FK_SessiePartners_Gebruiker1")
                        .IsRequired();

                    b.HasOne("Taalcafe.Models.DB.Sessie", "Sessie")
                        .WithMany("SessiePartners")
                        .HasForeignKey("SessieId")
                        .HasConstraintName("FK_SessiePartners_Sessie")
                        .IsRequired();

                    b.HasOne("Taalcafe.Models.DB.Gebruiker", "Taalcoach")
                        .WithMany("SessiePartnerTaalcoaches")
                        .HasForeignKey("TaalcoachId")
                        .HasConstraintName("FK_SessiePartners_Gebruiker")
                        .IsRequired();

                    b.Navigation("Cursist");

                    b.Navigation("Sessie");

                    b.Navigation("Taalcoach");
                });

            modelBuilder.Entity("Taalcafe.Models.DB.Gebruiker", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("SessiePartnerCursists");

                    b.Navigation("SessiePartnerTaalcoaches");
                });

            modelBuilder.Entity("Taalcafe.Models.DB.Sessie", b =>
                {
                    b.Navigation("SessiePartners");
                });

            modelBuilder.Entity("Taalcafe.Models.DB.Thema", b =>
                {
                    b.Navigation("Sessies");
                });
#pragma warning restore 612, 618
        }
    }
}
